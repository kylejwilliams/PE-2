
/****************************************************************************
 *																			*
 * Project Euler - Problem 2												*
 *																			*
 * Description: Each new term in the Fibonacci sequence is generated by		*
 * adding the previous two terms. By starting with 1 and 2, the first 10	*
 * terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the *
 * terms in the Fibonacci sequence whose values do not exceed four million, *
 * find the sum of the even-valued terms.									*
 *																			*
 * Programmed by Kyle Williams @ 22 December 2015							*
 ****************************************************************************/

#include <iostream>
#include <vector>
using namespace std;

int main() {
	vector<int> fibSeq;
	vector<int>::iterator it;

	int x1 = 1;
	int x2 = 2;
	int sum = 0;

	while (x2 < 4000000) {
		if (x2 % 2 == 0) { // we only care about the even-valued terms
			fibSeq.push_back(x2);
		}

		int tmp = x2;
		x2 = x1 + x2;
		x1 = tmp;
	}

	for (it = fibSeq.begin(); it != fibSeq.end(); it++) {
		sum += *it;
	}

	cout << sum;
	cin.get();
}